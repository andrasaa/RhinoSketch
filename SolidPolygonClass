from __future__ import division
import rhinoscriptsyntax as rs
import scriptcontext as sc
import Rhino
from System.IO import *
import time
# from WallModify101 import WallModify

#   Feature list:
#   Polygon elemek falelemekre bomlanak.
#   Black fill sketch on different layer - Wall Sketch black fill
#   End line different layer - Wall End Lines
#   Bugs:


class WallShape:
    def __init__ (self,wallThickness,wallContour):
        self.wallThickness = wallThickness
        self.wallContour = wallContour
    def AddWall(self):
        rs.EnableRedraw(False)
        group = rs.AddGroup ()
        # 3D
        # Create Surface from polylines:
        surface = rs.AddPlanarSrf (self.wallContour)
        if self.wallThickness != 0:
            centre = rs.SurfaceAreaCentroid (surface)
            param = rs.SurfaceClosestPoint (surface, centre[0])
            normal = rs.SurfaceNormal (surface, param)
            normal = rs.VectorUnitize(normal)
            normal = rs.VectorScale(normal,self.wallThickness)
            # Offsetting Shape
            connect = rs.DuplicateSurfaceBorder (surface, type=0)
            copy = rs.CopyObjects(connect)
            move = rs.MoveObjects (copy, normal)
            surface2 = rs.AddPlanarSrf (move)
            group = rs.AddGroup()
            count = 0
            for i in connect:
                loft = rs.AddLoftSrf ((connect[count],move[count]),None,None,0,0,0,False)  
                rs.AddObjectToGroup(loft, group)
                count += 1
            # Notes: rs.Command() requires object to be added to the objectTable.
            surfaceCO = rs.coercebrep(surface)
            obj = sc.doc.Objects.AddBrep(surfaceCO)
            sc.doc.Views.Redraw()
            rs.DeleteObject(surface)
            rs.Command("_Dir SelID " + str(obj)+ " _Enter Flip _Enter ")
            rs.SetUserText(obj, "Surface", "Base", attach_to_geometry=False)
            rs.SetUserText(obj, "SurfaceType", "Planar", attach_to_geometry=False)
            # Add objects to group:
            rs.AddObjectsToGroup([obj,move,surface2], group)
            expl = rs.ExplodePolysurfaces (loft, True)
            for i in expl:
                rs.AddObjectToGroup(i,group)
            for i in connect:
                rs.DeleteObject(i)
            for i in move:
                rs.DeleteObject(i)
        rs.DeleteObjects([self.wallContour])
